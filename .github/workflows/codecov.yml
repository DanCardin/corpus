name: Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  coverage:
    name: Run test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo binaries
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}

      - name: Toolchain setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: llvm-tools-preview

      - name: Install grcov
        env:
          LINK: https://github.com/mozilla/grcov/releases/download
          GRCOV_VERSION: 0.8.2
        run: |
          curl -L "$LINK/v$GRCOV_VERSION/grcov-linux-x86_64.tar.bz2" |
          tar xj -C $HOME/.cargo/bin

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast

        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: '-Zinstrument-coverage -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort -Cdebug-assertions=off'
          RUSTDOCFLAGS: '-Zinstrument-coverage -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort -Cdebug-assertions=off'

      - name: Generate coverage data
        id: grcov
        uses: actions-rs/grcov@v0.1.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v2
        with:
          name: lcov.info
          path: ${{ steps.grcov.outputs.report }}

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.grcov.outputs.report }}
          fail_ci_if_error: true
